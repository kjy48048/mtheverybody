<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 방법1. /로 날아온 브라우저 요청(이미지파일 로드, css)를 서블릿에서 처리하지 않고 정적객체(업로드이미지, css)로 가게... -->
	<resources mapping="/uploadimg/**" location="/uploadimg/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	<!-- 방법2. 맵핑이 안되는 경우(서블릿을 먼저 확인해보고 없으면) 정적객체(이미지파일)로 확인, 간단한 방법 -->
	<default-servlet-handler/>
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/**" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스프링 파일업로더 파서... commons 라이브러리를 이용...-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 지정하지 않으면 무제한 -->
		<beans:property name="maxUploadSize" value="25000000"/>
	</beans:bean>
	
	<!-- 프레젠테이션 레이어 패키지 변경 -->
	<context:component-scan base-package="com.teamb.mth.controller" />
	<context:component-scan base-package="com.teamb.mth.restfulcontroller" />
	
</beans:beans>
